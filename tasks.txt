---Might do soon.----------
- fix Archer dithering - can't reproduce?

- Archers are still overpowered. Not sure how I'll fix this.

- responsiveness - visual reaction to every hit & miss?

- make Archers lock onto shield

- fix summoning meter not going down



---Should do at some point.----------------
- GameUITest - I missed this somehow. It's kind of still in development?

- score counter?

- indicate buffedness somehow - could be part of the responsiveness changes

- fix MainAreaTest, needless withArgs

- create better shield sprite

- object reuse: Projectiles?
- object reuse: NoteSprites? they're easy to redraw, after all
- object reuse: other? that's most of them really, maybe cut down on the number of vectors or something

- get rid of MainArea.mainArea

- get ActorFactoryTest to work

- find a _better_ way of syncing animations to beat

- sync Repeater to Music Player instead

- possible to cheat by holding down holds infinitely?


---Bugs.-------------------	
- fix bug where timing is off for both position of notes and hitting them after quitting and starting again

- fix bug where late switches sometimes switch the music, but not the notes

- fix bug where player archers shoot too high?

- archers sometimes ignore assassins

- quitting to menu is broken - partially fixed, probably still broken, check regularly

- fix bug where actors still stand fighting no one
	- might be fixed?
	- broke during linked listing?
	
- sometimes multiple tracks play at once after reswitching

- timing on restart was slightly off? possibly due to memory leaks?

- background transitions still have some bugs


---Do Later.------------------
- change arrow sprite to pixelated rotation - this may be difficult to tune

- proper lag handling

- create better opponent strategies

- create 3 more lightning animations

- remove debug keys


---Behavior that should be tested, is impossible or difficult to test, or is too simple to test--
---Starred indicates priority.----------------------------

- test-unbacked classes: **GameUI**
	*AnimationCollection*, ArcherSprite, AssassinSprite, ClericSprite, DefaultOpponent,
	DefaultSprite, InfoArea, Lightning, Main, Menu, MenuTextButton, OpponentStrategy,
	Shield, ShieldSprite, SoundPlayer, Status, *SummoningMeter*, Wizard, WizardSprite

- untested stuff:
	arrows created by shooting<Archer>
	standing after shooting<Archer>
	wizard kill mode<MainArea>
	stopping destroys stuff<MainArea>
	jumping through shields<Assassin>
	*movement actually moves*<Actor>
	*starting and stopping, frequency*<FrameAnimation>
	sets onComplete<FrameAnimation>
	*projectile path*<Projectile>
	*projectile will finish if too low*<Projectile>
	
- classes that definitely don't need tests, because they are just data
	EmptyAnimation, GWError, MiniSprite, SmallCircleSprite, SmallSquareSprite,
	SmallTriangleSprite, ThinLineSprite, WizardMiniSprite
	

---Completed.---------------
- lay out the rest of the screen - mostly done
- add synchronize function - wasn't necessary
- projectile animation has issues on the descent? - fixed: bug in checking for down left shots
- finish initial music assets - they still need editing
- smooth track transitions with switch points - started
- create initial actor types - finished
- create arrow sprite instead of triangle
- add info panel - will do this in parts instead of all at once
- fix bug where it's possible to hit notes that are not the first available - couldn't reproduce
- add unit creation meter - done
- refactor actor classes - almost all behavior now part of Actor instead of its subclasses
- create more actor assets - finished, mostly anyway
- fix issue with main area initializing twice - width and height parameters should be avoided
- create more general non-hardcoded start for MainArea
- remove enter frame listeners
- remove actors from acting list and minimap when dying
- stop archers from standing on left side trying to run
- change scale so the right amount of things fit on the screen - might have to change it again, sadly
- make units only attack in the correct direction - also significant changes to ActorTest
- create wizards - WIZARD!
- stop archers retreating behind shield
	- arrows can't go through the shield?
- rewrite actor sprite constructors
- create summoning animations
- create a way to color actor sprites to identify owner
- sync animations to beat
- make frame animation adjust scale instead of doing it manually
- negative effect of bad notes
- make clerics bless surrounding allies
- wizard towers
- archer punching animation, cleric blessing animation
- some indication of blessedness
- stop assassins from jumping through shields - bug with targeting using unrelative center
- wizard killing
- wizard end of summoning animation
- remove initialize static methods
- auto-scrolling - created a scroller class
- rewrite test runner class -sorta
- remove actors that fall off screen
- replace actor lists with linked lists
- archers are overpowered - underpowered now, I'll do some balancing later
- guarantee that assassins can't jump through shields
- smooth audio transitions by fading in/out
- edit test runner plugin - working, pending testing
- player assassins still jump past shield -  forgot scale parameter in flipping center
- player wizard death   )
- opponent wizard death > related - done, mostly
- handle finished song  )
- sigh...ugly though it'll be, replace the actor lists with vectors again - it's not so bad
- make hitting notes after switching blocks more robust
- cut holds that extend over blocks
- combos? lightning effect? - may still need to adjust range of lightning
- have wizard killing archers get closer
- smooth summoning meter animations
- refactor blocks so that blocks of hittable notes and blocks on the screen are associated with the same object
- create repeater class
- better test coverage
- pending switch indication - might still need some tweaking
- allow some animations to stop instead of looping
- object reuse: ActorSprites
- sync animations to beat better - sorta works?
- ReuseManager class
- object reuse: Actors
- quitting while dying causes immediate death on restart - fixed incedentally
- shield invisible on restart - shields originally had no starting animation call
- funny issue with Assassins - consecutive assassinate animations wouldn't restart the animation, so the onComplete function never got called
- mid-summon actors aren't removed on quit
- cut down on the number of anonymous functions; I don't like it, but the fact that they create
	a new object with every new function AND add every single available object to it is such an
	inefficient way of handling it, means that I really need to do it differently	
- create more frames, they just look better that way - some tweaking still needed
- tempo is off? Timers are unreliable
- animate note sprites
- make new notes as they get closer so you don't need to step through frames on so many